---
title: "Visualising Simulated DASS21 Data from a Clinical Trial Context"
author: "Julian Chung"
format: html
execute:
  echo: true
  warning: false
  message: false
---

## Introduction

The Depression Anxiety Stress Scales (DASS21) is a self-report instrument designed to measure the emotional states of depression, anxiety, and stress. The short-form DASS21 contains 21 items divided evenly across the three subscales. Each item is scored from 0 to 3, and subscale totals are multiplied by 2 to align with the original DASS42 severity classification thresholds.

This project explores how longitudinal DASS21 data might be visualised in a clinical trial context. Specifically, we simulate the effects of an intervention on DASS21 scores over five timepoints: baseline, 3, 6, 9, and 12 months. This simulation includes both an intervention and a control group and mirrors REDCap-style data output.


## Simulation Logic

The dataset used in this analysis was generated using a Python script to simulate individual DASS item responses across five timepoints for 20 participants in each group. For the intervention group, an item-level treatment effect was applied to reduce scores by 20% after baseline.

The Python script:
- Simulates REDCap-style output with Q1-Q21 and total subscale scores
- Applies realistic item distributions using weighted probabilities
- Aggregates items into DASS subscale scores (Depression, Anxiety, Stress)

The result is a CSV ready for downstream analysis in R.

## Data Preparation

::: {.cell}
```{r}
library(tidyverse)

# Load data
data <- read.csv("data/simulated_dass21_full.csv")

# Multiply subscale scores by 2
scored_data <- data %>%
  mutate(across(c(DASS_Anxiety, DASS_Depression, DASS_Stress), ~ .x * 2))

# Reshape to long format
dass_long <- scored_data %>%
  pivot_longer(cols = c(DASS_Anxiety, DASS_Depression, DASS_Stress),
              names_to = "subscale",
              values_to = "score") %>%
  mutate(timepoint = factor(timepoint, levels = c("baseline", "3_months", "6_months", "9_months", "12_months")))
```
:::


## Severity Classification

::: {.cell}
```{r}
classify_severity <- function(score, subscale) {
  if (subscale == "DASS_Depression") {
    cut(score, breaks = c(-Inf, 9, 13, 20, 27, Inf),
        labels = c("Normal", "Mild", "Moderate", "Severe", "Extremely Severe"), right = TRUE)
  } else if (subscale == "DASS_Anxiety") {
    cut(score, breaks = c(-Inf, 7, 9, 14, 19, Inf),
        labels = c("Normal", "Mild", "Moderate", "Severe", "Extremely Severe"), right = TRUE)
  } else if (subscale == "DASS_Stress") {
    cut(score, breaks = c(-Inf, 14, 18, 25, 33, Inf),
        labels = c("Normal", "Mild", "Moderate", "Severe", "Extremely Severe"), right = TRUE)
  } else {
    return(NA)
  }
}

dass_long <- dass_long %>%
  mutate(severity_band = mapply(classify_severity, score, subscale))
```
:::


## Visualisation: Intervention Group

::: {.cell}
```{r}
intervention_data <- dass_long %>% filter(group == "intervention")

# Define timepoint labels
timepoint_labels <- c(
  "baseline" = "Baseline",
  "3_months" = "3 Months",
  "6_months" = "6 Months",
  "9_months" = "9 Months",
  "12_months" = "12 Months"
)

intervention_data$severity_band <- factor(intervention_data$severity_band,
                                          levels = c("Normal", "Mild", "Moderate", "Severe", "Extremely Severe"))

ggplot(intervention_data, aes(x = severity_band, y = timepoint, colour = subscale)) +
  geom_path(aes(group = interaction(id, subscale)),
            position = position_dodge(width = 0.4), alpha = 0.7) +
  geom_point(aes(group = interaction(id, subscale)),
            position = position_dodge(width = 0.4),
            size = 1.5, shape = 21, fill = "white", stroke = 0.3, alpha = 0.9) +
  scale_colour_manual("Subscale",
                      values = c("DASS_Anxiety" = "#E23418",
                                "DASS_Depression" = "#184CE2",
                                "DASS_Stress" = "#03AC50"),
                      labels = c("Anxiety", "Depression", "Stress")) +
  scale_y_discrete(labels = timepoint_labels) +
  coord_flip() +
  facet_wrap(~id) +
  theme_bw() +
  labs(
    title = "DASS21 Severity Trajectories by Subscale (Intervention Group)",
    x = "Severity Band",
    y = "Timepoint"
  ) +
  theme(
    axis.text.y = element_text(angle = 0, hjust = 1),
    axis.text.x = element_text(angle = 45, size = 8, hjust = 1, margin = margin(t = 5)),
    plot.title = element_text(hjust = 0.5),
    strip.text = element_text(size = 8),
    legend.background = element_rect(fill = "white", colour = "black", linewidth = 0.5),
    legend.key = element_rect(fill = "white", colour = NA)
  )
```
:::


## Visualisation: Control Group

::: {.cell}
```{r}
control_data <- dass_long %>% filter(group == "control")

control_data$severity_band <- factor(control_data$severity_band,
                                    levels = c("Normal", "Mild", "Moderate", "Severe", "Extremely Severe"))

ggplot(control_data, aes(x = severity_band, y = timepoint, colour = subscale)) +
  geom_path(aes(group = interaction(id, subscale)),
            position = position_dodge(width = 0.4), alpha = 0.7) +
  geom_point(aes(group = interaction(id, subscale)),
            position = position_dodge(width = 0.4),
            size = 1.5, shape = 21, fill = "white", stroke = 0.3, alpha = 0.9) +
  scale_colour_manual("Subscale",
                      values = c("DASS_Anxiety" = "#E23418",
                                "DASS_Depression" = "#184CE2",
                                "DASS_Stress" = "#03AC50"),
                      labels = c("Anxiety", "Depression", "Stress")) +
  scale_y_discrete(labels = timepoint_labels) +
  coord_flip() +
  facet_wrap(~id) +
  theme_bw() +
  labs(
    title = "DASS21 Severity Trajectories by Subscale (Control Group)",
    x = "Severity Band",
    y = "Timepoint"
  ) +
  theme(
    axis.text.y = element_text(angle = 0, hjust = 1),
    axis.text.x = element_text(angle = 45, size = 8, hjust = 1, margin = margin(t = 5)),
    plot.title = element_text(hjust = 0.5),
    strip.text = element_text(size = 8),
    legend.background = element_rect(fill = "white", colour = "black", linewidth = 0.5),
    legend.key = element_rect(fill = "white", colour = NA)
  )
```
:::


## Discussion

This simulated visualisation demonstrates how individual-level DASS21 data could be presented longitudinally across multiple timepoints. Faceted plots by participant ID provide granular insight into symptom trajectories across depression, anxiety, and stress domains.

Such a visualisation could be used in early-phase trials, psychological studies, or pilot data analysis to:
- Detect trends in subscale response
- Identify participants with worsening symptoms
- Compare intervention vs. control effectiveness visually

Future enhancements might include summary panels, group-level means, or animated progression across timepoints.

---

*Generated as part of a personal portfolio project using R and Python.*

